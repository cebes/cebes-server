openapi: 3.0.0
servers: []
info:
  description: This is API documentation for Cebes Pipeline Serving.
  version: "1.0.0-oas3"
  title: Cebes Pipeline Serving
  contact:
    email: vu@cebes.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: inference
    description: Synchronous and Asynchronous Inference requests
  - name: auth
    description: Authentication
paths:
  /inferenceSync:
    post:
      tags:
        - inference
      summary: Send a synchronous inference request
      requestBody:
        description: >-
          Describe the requested pipeline, the map of input values and the list of 
          output slots to take results.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InferenceRequest'
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InferenceResponse'
                
  /inference:
    post:
      tags:
        - inference
      summary: Send an asynchronous inference request
      description: >-
        This endpoint returns a `requestId`, that can be used to query the
        `request/{requestId}` endpoint and retrive the result asynchronously.
      requestBody:
        description: >-
          Describe the requested pipeline, the map of input values and the list of output slots
          to take results. 
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InferenceRequest'
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FutureResult'
                
  '/request/{requestId}':
    post:
      tags:
        - inference
      summary: Retrive the result of an asynchronous inference request sent to `/inference`
      parameters:
        - in: path
          name: requestId
          schema:
            $ref: '#/components/schemas/UUID'
          required: true
          example: 6349794e-554f-437b-b93d-eada170c5ec5
          description: UUID of the asynchronous request.
      responses:
        '200':
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InferenceResponse'
  /auth/login:
    post:
      tags:
        - auth
      summary: Logs user into the system
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: true
          schema:
            type: string
        - name: passwordHash
          in: query
          description: 'The password for login, after base64'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            XSRF-TOKEN:
              description: >-
                XSRF token, to be re-used by clients for subsequent requests in
                X-XSRF-TOKEN header
              schema:
                type: string
            Set-Authorization:
              description: >-
                Authorization token, to be re-used by clients for subsequent
                requests
              schema:
                type: string
            Set-Refresh-Token:
              description: 'Refresh-Token, to be re-used by clients for subsequent requests'
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: string
                example: "Ok"
        '400':
          description: Invalid username/password supplied
  /user/logout:
    post:
      tags:
        - auth
      summary: Logs out current logged in user session
      responses:
        default:
          description: successful operation
externalDocs:
  description: Find out more about Cebes
  url: 'http://cebes.io'
components:
  schemas:
    RequestStatus:
        type: string
        enum:
          - scheduled
          - finished
          - failed
        description: represent the status of an asynchronous request.
    UUID:
      type: string
      description: >-
        a string representing the UUID of a request, usually generated by the server.
      example: 6349794e-554f-437b-b93d-eada170c5ec5
    FutureResult:
      type: object
      properties:
        requestId:
          $ref: '#/components/schemas/UUID'
    SerializableResult:
      type: object
      description: Results of an asynchronous command, returned by the server.
      properties:
        requestId:
          $ref: '#/components/schemas/UUID'
        requestUri:
          type: string
          example: "/inference"
          description: the URI to which the original request was sent.
        requestEntity:
          type: object
          description: JSON representation of the original request.
        status:
          $ref: '#/components/schemas/RequestStatus'
        response:
          type: object
          description: JSON representation of the final result.
    InferenceRequest:
      type: object
      properties:
        servingName:
          type: string
          description: Name of the pipeline to be run in this request
          example: churn-detection-pipeline
        inputs:
          $ref: '#/components/schemas/PipelineMessageCollection'
        outputs:
          type: array
          example: [slot1, slot2]
          items:
            type: string
    InferenceResponse:
      type: object
      properties:
        outputs:
          $ref: '#/components/schemas/PipelineMessageCollection'
    PipelineMessageCollection:
      type: object
      example:
        slot1: {"value": 1}
        slot2: {"value": 2}
      additionalProperties:
        type: object